/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

 :root {
    --border-color: #d1d9e0;
    --light-bg: #f6f8fa;
    --body-text: #111;
 }

 div {
    box-sizing: border-box;
 }

body {
    margin: 0;
    font-family: monospace;
    color: var(--body-text);
}

.site-container {
    width: min(90%, 1100px);
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-direction: column;
    gap: 22px;
}

section {
    padding-block: clamp(33px, 6vw, 91px);
}

/******************************
*
*
* Typography
*
*
*******************************/
h1, h2, h3, h4, h5, h6 {
    margin: 0;
}

p {
    margin-bottom: 0;
}
/******************************
*
*
* Buttons & Links
*
*
*******************************/
a, button, input[type=submit] {
    appearance: none;
    display: inline-block;
    align-self: flex-start;
    padding: 4px 12px;
    border: 1px solid var(--border-color);
    border-radius: 21px;
    font-family: inherit;
    font-size: 16px;
    background-color: var(--light-bg);
    color: var(--body-text);
    text-decoration: none;
    cursor: pointer;
    transition: background-color .2s;
}
:is(a, button, input[type=submit]):not(.btn-icon):hover {
    background-color: #e6e6e6;
}
:is(a, button, input[type=submit]):not(.btn-icon):active {
    background-color: #d8d8d8;
}

.btn-icon {
    padding: 0;
    border: none;
    width: 22px;
    height: 22px;
    object-fit: contain;
}
.btn-icon svg {
    transition: fill .2s ease;
}
.btn-icon:hover svg {
    fill: #6767e1;
}

.button_to:has(.btn-icon) {
    display: inline-flex;
    align-items: center;
}
/******************************
*
*
* Forms
*
*
*******************************/
input, textarea {
    appearance: none;
    border: 1px solid var(--border-color);
    padding: 8px;
    font-family: inherit;
    font-size: 16px;
    transition: background-color .2s ease;
}

:is(input, textarea):focus {
    outline: none;
    background-color: var(--light-bg);
}

form.button_to {
    display: inline-block;
}

.form-default {
    display: flex;
    flex-direction: column;
    gap: 12px;
}
.form-default .input {
    display: flex;
    flex-direction: column;
    gap: 8px;
}
.form-default input:not([type=submit]) {
    padding: 8px 0;
    border: none;
    border-bottom: 1px solid var(--border-color);
}
.form-default textarea {
    field-sizing: content;
    min-height: 3rem;
}

.search {
    display: flex;
    gap: 10px;
    align-items: center;
}
.search .btn-icon {
    align-self: center;
}
/******************************
*
*
* Task Index
*
*
*******************************/
.task {
    position: relative;
    display: flex;
    align-items: center;
    gap: 18px;
    border-bottom: 1px solid var(--border-color);
    cursor: pointer;
    transition: background-color .2s;
    overflow: hidden;
}

.task:hover {
    background-color: var(--light-bg);
}

.task h2 {
    width: 100%;
    font-size: 18px;
    font-weight: 400;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.task-title {
    width: calc(100% - 99px);
    padding: 12px 0;
    border: none;
    background-color: transparent !important;
}

.task .actions {
    position: absolute;
    top: 100%;
    right: 0;
    padding-block: 12px;
}

.task .actions :is(.btn-icon, .button_to) {
    opacity: 0;
    transition: transform .2s ease, opacity .8s ease;
}

.task:hover .actions :is(.btn-icon, .button_to) {
    opacity: 1;
    transform: translateY(calc(-100% - 24px));
}
.task:hover .actions .button_to .btn-icon {
    transform: none;
}

.task .actions .btn-icon:nth-child(2) {
    transition-delay: .2s;
}
.task .actions .button_to {
    transition-delay: .4s;
}

/******************************
*
*
* Media Queries
*
*
*******************************/

@media (max-width: 900px) {
    .card-container {
        grid-template-columns: repeat(2, 1fr);
    }
}
@media (max-width: 560px) {
    .card-container {
        grid-template-columns: repeat(1, 1fr);
    }
}